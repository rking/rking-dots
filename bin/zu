#!/usr/bin/env ruby
# The goal: like "uz", but smarter.

# TODO:
# - http://... (with wget first)
# - Plus build?
# - These:
#     .lzma (unlzma)
#     .tlz (unlzma)
#     ...?

class Array
    def polite?
        dir_match = %r[[^/]+/]
        first = self[0][dir_match]
        self.size == 1 or (
            first and size == select do |e| e[dir_match] == first end.size
        )
    end
end

def redwarn msg
    warn "\e[31m#{msg}\e[0m"
end

ARGV.each do |f|
    if not File.exists? f
        redwarn "'#{f}' doesn't seem to exist."
        next
    end
    full_path = File.expand_path f
    basename = File.basename f
    ext = File.extname f
    simplename = basename.chomp ext
    if '.tar' == File.extname(simplename)
        simpename = simplename.chomp '.tar'
        ext = '.tar' + ext
    end

    run_and_split = proc do |*cmd_and_args|
        IO.popen(cmd_and_args.push full_path).read.split /\n/
    end

    files_list, extract_cmd = *(
        case ext
        when '.zip'
            [ run_and_split['zipinfo', '-1'], %w(unzip) ]
        when '.tar'
            [ run_and_split['tar', 'tf'], %w(tar xvf) ]
        when '.tar.gz', '.tgz'
            [ run_and_split['tar', 'tzf'], %w(tar xvzf) ]
        when '.tar.bz2', '.tbz2'
            [ run_and_split['tar', 'tjf'], %w(tar xvjf) ]
        when '.tar.xz', '.txz'
            [ run_and_split['tar', 'tJf'], %w(tar xvJf) ]
        when '.gz', '.xz', '.bz2'
            [
                [ simplename ],
                {
                    '.gz' => %w(gunzip),
                    '.xz' => %w(unxz),
                    '.bz2' => %w(bunzip2),
                }[ext]
            ]
        else
            redwarn "'#{f}' - Unknown extension. Doing nothing."
            next
        end)

    extract = proc do
        extract_cmd.push full_path
        if system *extract_cmd
            # Perhaps provide this as a flag?  I like getting rid of the
            # archives files.
            File.exist? f and File.unlink f
        else
            redwarn "`#{extract_cmd.join ' '}` failed (#{$?})."
        end
    end

    if files_list.polite?
        extract.call
    else
        puts "# Caught impoliteness. mkdir \e[34;1m#{simplename}\e[0m/, then."
        Dir.mkdir simplename
        Dir.chdir simplename do
            extract.call
        end
    end
end
